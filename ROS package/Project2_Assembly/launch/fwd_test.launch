<!-- Every launch file starts with this command -->
<launch> 

    <!-- Include helps you launch other launch files within this launch file-->
        <!-- For file tag, mention the gazebo_ros empty world's launch file -->
        <!-- For the arg name, give any name of your choice to this world -->
        <!-- for the value tag, provide the path to the world file that you downloaded -->
	

        <!-- Defining this param here helps you store all the urdf contents of robot+lidar into a single param name -->
        <!-- fill the command by adding in the path to your .xacro file the $ symbol below -->
        <!--  -->
	<param name= "robot_description" command="$(find xacro)/xacro --inorder '$(find Project2_Assembly)/urdf/my_robot_integration.urdf.xacro' " />
    <!-- Add in your robot name in the value tag -->
    <param name = "my_robot" value="quad_walk"/> 
	<arg name ="init_pose" value="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0"/>

    <!-- This command adds the controller variables you defined in the config file into ros's parameter list. Simply add the file name in the file tag -->
	<rosparam file="$(find Project2_Assembly)/config/joint_names_Project2_Assembly.yaml" command="load"/>


	<!-- Node for publishing base footprint -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="use_gui" value="False"/>
    </node>


    <!-- TF node that gives the static transformation between the world map and the base link of your robot. Change /base_link to the /root link name of your robot -->
    <node pkg="tf" type="static_transform_publisher" name="map_to_base" args="1 0 0 0 0 0 1 /map /dummy_link 10" />


    <!-- Controller spawner: Starts all the defined controllers with their configs. Just add your controller names defined in your config file into the args tag below   -->
    <node name="controller_spwaner" pkg="controller_manager" type="spawner" respawn="false"
    	output="screen" ns="/quad_walk" args="joint_state_controller left_rear_hip_control left_rear_knee_control left_front_hip_control left_front_knee_control right_front_hip_control right_front_knee_control right_rear_hip_control right_rear_knee_control right_arm_control left_arm_control right_arm_control1 left_arm_control1 right_arm_control2 left_arm_control2 right_arm_control3 left_arm_control3 right_arm_control4 left_arm_control4 right_arm_control5 left_arm_control5" />  


    <!-- A node to publish the robot states onto ros network -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>	


    <!--rviz-->
  <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
    output="screen" args="-d $(find Project2_Assembly)/config/forward_kinematics.rviz"/>


</launch>
